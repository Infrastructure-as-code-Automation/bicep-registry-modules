{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "18042735123172379156"
    },
    "name": "Azure Stack HCI Network Interface",
    "description": "This module deploys an Azure Stack HCI network interface."
  },
  "definitions": {
    "extendedLocationType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. The name of the extended location."
          }
        },
        "type": {
          "type": "string",
          "allowedValues": [
            "CustomLocation"
          ],
          "metadata": {
            "description": "Required. The type of the extended location."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The extended location properties."
      }
    },
    "interfaceDNSSettingsType": {
      "type": "object",
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. List of DNS server IP Addresses for the interface."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The DNS settings for the network interface."
      }
    },
    "ipConfigurationPropertiesType": {
      "type": "object",
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Private IP address of the IP configuration."
          }
        },
        "subnet": {
          "$ref": "#/definitions/logicalNetworkArmReferenceType",
          "nullable": true,
          "metadata": {
            "description": "Optional. Name of Subnet bound to the IP configuration."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The IP configuration properties."
      }
    },
    "logicalNetworkArmReferenceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "metadata": {
            "description": "Required. The ARM ID for a Logical Network."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The Logical Network ARM reference."
      }
    },
    "ipConfigurationType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. The name of the resource that is unique within a resource group."
          }
        },
        "properties": {
          "$ref": "#/definitions/ipConfigurationPropertiesType",
          "nullable": true,
          "metadata": {
            "description": "Optional. Properties of IP configuration."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The IP configuration properties format."
      }
    },
    "networkSecurityGroupArmReferenceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "metadata": {
            "description": "Required. The ARM ID for a Network Security Group."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The Network Security Group ARM reference."
      }
    },
    "networkInterfacePropertiesType": {
      "type": "object",
      "properties": {
        "createFromLocal": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Boolean indicating whether this is a existing local network interface or if one should be created."
          }
        },
        "dnsSettings": {
          "$ref": "#/definitions/interfaceDNSSettingsType",
          "nullable": true,
          "metadata": {
            "description": "Optional. DNS Settings for the interface."
          }
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ipConfigurationType"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. A list of IPConfigurations of the network interface."
          }
        },
        "macAddress": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The MAC address of the network interface."
          }
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/networkSecurityGroupArmReferenceType",
          "nullable": true,
          "metadata": {
            "description": "Optional. Network Security Group attached to the network interface."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The network interface properties."
      }
    },
    "roleAssignmentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
          }
        },
        "roleDefinitionIdOrName": {
          "type": "string",
          "metadata": {
            "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
          }
        },
        "principalType": {
          "type": "string",
          "allowedValues": [
            "Device",
            "ForeignGroup",
            "Group",
            "ServicePrincipal",
            "User"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The principal type of the assigned principal ID."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The description of the role assignment."
          }
        },
        "condition": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
          }
        },
        "conditionVersion": {
          "type": "string",
          "allowedValues": [
            "2.0"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Version of the condition."
          }
        },
        "delegatedManagedIdentityResourceId": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The Resource Id of the delegated managed identity resource."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a role assignment.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the resource to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "customLocationResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource ID of the associated custom location."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "properties": {
      "$ref": "#/definitions/networkInterfacePropertiesType",
      "metadata": {
        "description": "Required. The properties of the network interface."
      }
    },
    "roleAssignments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/roleAssignmentType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
      "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]"
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.azurestackhci-networkinterface.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "networkInterface": {
      "type": "Microsoft.AzureStackHCI/networkInterfaces",
      "apiVersion": "2025-04-01-preview",
      "name": "[parameters('name')]",
      "tags": "[parameters('tags')]",
      "extendedLocation": {
        "type": "CustomLocation",
        "name": "[parameters('customLocationResourceId')]"
      },
      "location": "[parameters('location')]",
      "properties": "[parameters('properties')]"
    },
    "networkInterface_roleAssignments": {
      "copy": {
        "name": "networkInterface_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.AzureStackHCI/networkInterfaces/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "networkInterface"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the network interface."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the network interface."
      },
      "value": "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the network interface."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of the network interface."
      },
      "value": "[reference('networkInterface', '2025-04-01-preview', 'full').location]"
    }
  }
}